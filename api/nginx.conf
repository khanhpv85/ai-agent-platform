events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Logging
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log;

    # Basic settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=login:10m rate=5r/m;

    # Upstream servers
    upstream auth_service {
        server auth-service:3000;
    }

    upstream company_service {
        server company:3000;
    }

    upstream agents_service {
        server agents-service:3000;
    }

    upstream notifications_service {
        server notifications-service:3000;
    }

    upstream ai_service {
        server ai-service:8000;
    }

    # Main server block
    server {
        listen 80;
        server_name localhost;

        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Referrer-Policy "no-referrer-when-downgrade" always;
        add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;

        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # Authentication service routes
        location /api/auth/ {
            limit_req zone=api burst=20 nodelay;
            
            # Remove /api/auth prefix before forwarding
            rewrite ^/api/auth/(.*) /auth/$1 break;
            
            proxy_pass http://auth_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Timeouts
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }



        # Company service routes
        location /api/company/ {
            limit_req zone=api burst=20 nodelay;
            
            # JWT validation middleware would go here
            # For now, we'll pass through
            
            rewrite ^/api/company/(.*) /$1 break;
            
            proxy_pass http://company_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Authorization $http_authorization;
        }

        # Agents service routes
        location /api/agents/ {
            limit_req zone=api burst=20 nodelay;
            
            rewrite ^/api/agents/(.*) /$1 break;
            
            proxy_pass http://agents_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Authorization $http_authorization;
        }

        # Notifications service routes
        location /api/notifications/ {
            limit_req zone=api burst=20 nodelay;
            
            rewrite ^/api/notifications/(.*) /$1 break;
            
            proxy_pass http://notifications_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Authorization $http_authorization;
        }

        # AI service routes (internal only)
        location /api/ai/ {
            limit_req zone=api burst=20 nodelay;
            
            # This should only be accessible from internal services
            # In production, you might want to add IP whitelisting
            
            rewrite ^/api/ai/(.*) /$1 break;
            
            proxy_pass http://ai_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Documentation routes for individual services
        location /docs/auth/ {
            proxy_pass http://auth_service/docs/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /docs/company/ {
            proxy_pass http://company_service/docs/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /docs/agents/ {
            proxy_pass http://agents_service/docs/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /docs/notifications/ {
            proxy_pass http://notifications_service/docs/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /docs/ai/ {
            proxy_pass http://ai_service/docs;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Default API route
        location /api/ {
            limit_req zone=api burst=20 nodelay;
            
            return 404 '{"error": "API endpoint not found"}';
            add_header Content-Type application/json;
        }

        # Unified documentation landing page - must come before the catch-all location
        location = /docs {
            alias /usr/share/nginx/html/docs/index.html;
            add_header Content-Type text/html;
        }

        # Frontend static files (if served through nginx)
        location / {
            # This would typically serve the React frontend
            # For now, we'll redirect to the frontend service
            return 301 http://frontend-app:3000$request_uri;
        }

        # Error pages
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }
}
