syntax = "proto3";

package auth;

// Auth service definition
service AuthService {
  // Validate JWT token
  rpc ValidateToken(ValidateTokenRequest) returns (ValidateTokenResponse);
  
  // Get user auth status
  rpc GetUserAuthStatus(GetUserAuthStatusRequest) returns (GetUserAuthStatusResponse);
  
  // Validate user credentials
  rpc ValidateCredentials(ValidateCredentialsRequest) returns (ValidateCredentialsResponse);
}

// Validate token request
message ValidateTokenRequest {
  string token = 1;
}

// Validate token response
message ValidateTokenResponse {
  bool success = 1;
  string message = 2;
  bool valid = 3;
  UserAuthInfo user_info = 4;
}

// Get user auth status request
message GetUserAuthStatusRequest {
  string user_id = 1;
}

// Get user auth status response
message GetUserAuthStatusResponse {
  bool success = 1;
  string message = 2;
  UserAuthStatus auth_status = 3;
}

// Validate credentials request
message ValidateCredentialsRequest {
  string email = 1;
  string password = 2;
}

// Validate credentials response
message ValidateCredentialsResponse {
  bool success = 1;
  string message = 2;
  bool valid = 3;
  UserAuthInfo user_info = 4;
}

// User auth info message
message UserAuthInfo {
  string user_id = 1;
  string email = 2;
  string first_name = 3;
  string last_name = 4;
  string role = 5;
  bool is_active = 6;
  bool email_verified = 7;
}

// User auth status message
message UserAuthStatus {
  string user_id = 1;
  string email = 2;
  string auth_status = 3; // active, locked, suspicious, unverified
  bool is_locked = 4;
  int32 login_attempts = 5;
  string locked_until = 6;
  string last_login_at = 7;
  bool email_verified = 8;
  int32 active_sessions = 9;
}
